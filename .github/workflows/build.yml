name: "Build Flutter APK's and App bundle"

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "develop" branch
  workflow_dispatch:
    inputs:
      build_name:
        description: 'Build Name'
        required: true
        default: '1.0.0'
      build_number:
        description: 'Build Number'
        required: true
        default: '1'

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    permissions:
      contents: write

    env:
      SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
      SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
      SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
      
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - uses: actions/checkout@v3
      
      # Set up Flutter.
      - uses: subosito/flutter-action@v1
        with:
          channel: "stable"
      - run: flutter doctor -v

      
      # Checkout the repository code and get packages.
      - name: Checkout flutter_app code
        uses: actions/checkout@v3
      - run: flutter pub get
      # Create the keystore file
      - name: Decode Keystore
        id: decode_keystore
        uses: timheuer/base64-to-file@v1.2
        with:
          fileName: 'android_keystore.jks'
          fileDir: '/home/runner/work/audiobookshelfwear/audiobookshelfwear/android/app/keystore/'
          encodedString: ${{ secrets.KEYSTORE }}

      - name: Create key.properties file
        run: |
          echo "storePassword=$SIGNING_STORE_PASSWORD" > /home/runner/work/audiobookshelfwear/audiobookshelfwear/android/key.properties
          echo "keyPassword=$SIGNING_KEY_PASSWORD" >> /home/runner/work/audiobookshelfwear/audiobookshelfwear/android/key.properties
          echo "keyAlias=$SIGNING_KEY_ALIAS" >> /home/runner/work/audiobookshelfwear/audiobookshelfwear/android/key.properties
          echo "storeFile=keystore/android_keystore.jks" >> /home/runner/work/audiobookshelfwear/audiobookshelfwear/android/key.properties

      - name: Build APK
        run: flutter build apk --split-per-abi --release --build-number ${{ github.event.inputs.build_number }} --build-name ${{ github.event.inputs.build_name }} --target "lib/main_production.dart" --flavor production
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          ANDROID_KEYSTORE_PATH: "/home/runner/work/audiobookshelfwear/audiobookshelfwear/android/app/keystore/android_keystore.jks"
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Build APP BUNDLE
        run: flutter build appbundle --build-number ${{ github.event.inputs.build_number }} --build-name ${{ github.event.inputs.build_name }} --target "lib/main_production.dart" --flavor production
        env:
          SIGNING_KEY_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          SIGNING_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          SIGNING_STORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}
          ANDROID_KEYSTORE_PATH: "/home/runner/work/audiobookshelfwear/audiobookshelfwear/android/app/keystore/android_keystore.jks"
          ANDROID_KEYSTORE_ALIAS: ${{ secrets.SIGNING_KEY_ALIAS }}
          ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.SIGNING_KEY_PASSWORD }}
          ANDROID_KEYSTORE_PASSWORD: ${{ secrets.SIGNING_STORE_PASSWORD }}

      - name: Create Release
        uses: ncipollo/release-action@v1.14.0
        with:
          artifacts: "build/app/outputs/apk/release/*.apk, build/app/outputs/bundle/release/*.aab"

      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.0
        with:
          name: release-apk
          path: build/app/outputs/apk/
